<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>dev.sarek</groupId>
  <artifactId>sarek-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>Scrum-Master.de - Agile Project Management</name>
    <url>https://scrum-master.de</url>
  </organization>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <bytebuddy.version>1.10.11</bytebuddy.version>
    <javassist.version>3.27.0-GA</javassist.version>
    <javassist-maven-plugin.version>2.0.0</javassist-maven-plugin.version>
    <objenesis.version>3.1</objenesis.version>

    <!--
      Defined by build-helper:rootlocation.
      Unfortunately, for IntelliJ IDEA we still need "-DprojectRootDir=..." in <projectRootDir>/.mvn/jvm.config.
    -->
    <!--suppress UnresolvedMavenProperty -->
    <projectRootDir>${rootlocation}</projectRootDir>

    <sarek-agent.jar>
      ${projectRootDir}/sarek-agent/target/sarek-agent-${project.version}.jar
    </sarek-agent.jar>
    <sarek-all.jar>
      ${projectRootDir}/sarek/target/sarek-${project.version}-all.jar
    </sarek-all.jar>
    <mock-all.jar>
      ${projectRootDir}/sarek-mock-parent/sarek-mock/target/sarek-mock-${project.version}-all.jar
    </mock-all.jar>
    <aspect-agent.jar>
      ${projectRootDir}/aspect-parent/aspect-agent/target/aspect-agent-${project.version}.jar
    </aspect-agent.jar>
    <aspect-core.jar>
      ${projectRootDir}/aspect-parent/aspect-core/target/aspect-core-${project.version}-all.jar
    </aspect-core.jar>
    <constructor-mock-agent.jar>
      ${projectRootDir}/constructor-mock-parent/constructor-mock-agent/target/constructor-mock-agent-${project.version}-all.jar
    </constructor-mock-agent.jar>
    <remove-final-agent.jar>
      ${projectRootDir}/remove-final-parent/remove-final-agent/target/remove-final-agent-${project.version}-all.jar
    </remove-final-agent.jar>
    <instrumented-jre.jar>
      ${projectRootDir}/agent-test-parent/agent-test-instrument-jre/target/agent-test-instrument-jre-${project.version}.jar
    </instrumented-jre.jar>

  </properties>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <!--
            TODO:
              - Switch to next milestone or stable release as soon as available on Maven Central
              - Attention: 3.0.0-RC1 is changing + unstable, e.g. freezes when running ITs with active agents
          -->
          <!--          <version>3.0.0-RC1</version>-->
          <version>3.0.0-M4</version>
          <configuration>
            <!-- Fix for "[WARNING] Corrupted STDOUT by directly writing to native stream in forked JVM" -->
            <!--            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>-->
            <systemPropertyVariables>
              <sarek-agent.jar>${sarek-agent.jar}</sarek-agent.jar>
              <sarek-all.jar>${sarek-all.jar}</sarek-all.jar>
              <mock-all.jar>${mock-all.jar}</mock-all.jar>
              <aspect-agent.jar>${aspect-agent.jar}</aspect-agent.jar>
              <aspect-core.jar>${aspect-core.jar}</aspect-core.jar>
              <constructor-mock-agent.jar>${constructor-mock-agent.jar}</constructor-mock-agent.jar>
              <remove-final-agent.jar>${remove-final-agent.jar}</remove-final-agent.jar>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <id>reuse-jvm</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <!-- One JVM for multiple test classes -->
                <reuseForks>true</reuseForks>
                <excludedGroups>dev.sarek.agent.test.SeparateJVM</excludedGroups>
              </configuration>
            </execution>
            <execution>
              <id>separate-jvm</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <!-- One JVM per test class (per method is not possible) -->
                <reuseForks>false</reuseForks>
                <groups>dev.sarek.agent.test.SeparateJVM</groups>
              </configuration>
            </execution>
            <!-- We have two other, mutually exclusive text executions already and do not need this one -->
            <execution>
              <!-- We have two other, mutually exclusive text executions already and do not need this one -->
              <id>default-test</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <!--
            TODO:
              - Switch to next milestone or stable release as soon as available on Maven Central
              - Attention: 3.0.0-RC1 is changing + unstable, e.g. freezes when running ITs with active agents
          -->
          <!--          <version>3.0.0-RC1</version>-->
          <version>3.0.0-M4</version>
          <configuration>
            <!-- Fix for "[WARNING] Corrupted STDOUT by directly writing to native stream in forked JVM" -->
            <!--            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>-->
            <systemPropertyVariables>
              <sarek-agent.jar>${sarek-agent.jar}</sarek-agent.jar>
              <sarek-all.jar>${sarek-all.jar}</sarek-all.jar>
              <mock-all.jar>${mock-all.jar}</mock-all.jar>
              <aspect-agent.jar>${aspect-agent.jar}</aspect-agent.jar>
              <aspect-core.jar>${aspect-core.jar}</aspect-core.jar>
              <constructor-mock-agent.jar>${constructor-mock-agent.jar}</constructor-mock-agent.jar>
              <remove-final-agent.jar>${remove-final-agent.jar}</remove-final-agent.jar>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <id>reuse-jvm</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
              <configuration>
                <!-- One JVM for multiple test classes -->
                <reuseForks>true</reuseForks>
                <excludedGroups>dev.sarek.agent.test.SeparateJVM</excludedGroups>
              </configuration>
            </execution>
            <execution>
              <id>separate-jvm</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
              <configuration>
                <!-- One JVM per test class (per method is not possible) -->
                <reuseForks>false</reuseForks>
                <groups>dev.sarek.agent.test.SeparateJVM</groups>
              </configuration>
            </execution>
            <execution>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.3</version>
          <configuration>
            <filters>
              <!--  Include own manifest -->
              <filter>
                <artifact>dev.sarek:${project.artifactId}</artifact>
                <includes>
                  <include>META-INF/MANIFEST.MF</include>
                </includes>
              </filter>
              <filter>
                <artifact>dev.sarek:sarek-agent-common</artifact>
                <includes>
                  <include>dev/sarek/agent/**</include>
                  <!-- Includes copies of ByteBuddy, ASM and Javassist licences in module sarek-agent-common -->
                  <include>META-INF/license/**</include>
                </includes>
              </filter>
              <filter>
                <artifact>dev.sarek:aspect-core</artifact>
                <excludes>
                  <exclude>META-INF/**</exclude>
                </excludes>
              </filter>
              <filter>
                <artifact>dev.sarek:*</artifact>
                <excludes>
                  <exclude>META-INF/maven/**</exclude>
                </excludes>
              </filter>
              <filter>
                <artifact>net.bytebuddy:*</artifact>
                <excludes>
                  <exclude>META-INF/**</exclude>
                </excludes>
              </filter>
              <filter>
                <artifact>org.javassist:*</artifact>
                <excludes>
                  <exclude>META-INF/**</exclude>
                </excludes>
              </filter>
              <filter>
                <artifact>org.objenesis:*</artifact>
                <excludes>
                  <exclude>META-INF/**</exclude>
                </excludes>
              </filter>
              <filter>
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/maven/**</exclude>
                </excludes>
              </filter>
            </filters>
            <!--
              Caveat: For non-relocated artifacts, make sure to override relocation via
              <relocations>
                <relocation>
                  <excludes>
                    <exclude>*</exclude>
                  </excludes>
                </relocation>
              </relocations>
            -->
            <relocations>
              <relocation>
                <pattern>net.bytebuddy.jar.asm</pattern>
                <shadedPattern>dev.sarek.jar.asm</shadedPattern>
              </relocation>
              <relocation>
                <pattern>net.bytebuddy</pattern>
                <shadedPattern>dev.sarek.jar.bytebuddy</shadedPattern>
              </relocation>
              <relocation>
                <pattern>javassist</pattern>
                <shadedPattern>dev.sarek.jar.javassist</shadedPattern>
              </relocation>
              <relocation>
                <pattern>org.objenesis</pattern>
                <shadedPattern>dev.sarek.jar.objenesis</shadedPattern>
              </relocation>
            </relocations>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <!-- We use compiler source/target 8 -> enforce Java 8+ -->
                  <requireJavaVersion>
                    <version>1.8</version>
                  </requireJavaVersion>
                  <!-- maven.multiModuleProjectDirectory: introduced in 3.3.1, important bug fix in 3.3.9 -->
                  <requireMavenVersion>
                    <version>3.3.9</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>de.icongmbh.oss.maven.plugins</groupId>
          <artifactId>javassist-maven-plugin</artifactId>
          <version>2.0.0</version>
          <configuration>
            <includeTestClasses>false</includeTestClasses>
            <!-- TODO: create demo test module weaving constructor mock code into JRE bootstrap classes -->
            <!--
            <transformerClasses>
              <transformerClass>
                <className>ConstructorMockPluginTransformer</className>
                <properties>
                  <property>
                    <name>append.value</name>
                    <value>and ToStringTransformer</value>
                  </property>
                </properties>
              </transformerClass>
            </transformerClasses>
            -->
          </configuration>
          <executions>
            <execution>
              <phase>process-classes</phase>
              <goals>
                <goal>javassist</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
    </plugins>

  </build>

  <dependencyManagement>
    <dependencies>

      <!-- ByteBuddy -->
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>${bytebuddy.version}</version>
      </dependency>
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy-agent</artifactId>
        <version>${bytebuddy.version}</version>
      </dependency>
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy-dep</artifactId>
        <version>${bytebuddy.version}</version>
      </dependency>

      <!-- Javassist -->
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${javassist.version}</version>
      </dependency>
      <dependency>
        <groupId>de.icongmbh.oss.maven.plugins</groupId>
        <artifactId>javassist-maven-plugin</artifactId>
        <version>${javassist-maven-plugin.version}</version>
      </dependency>
      <!-- Resolve version conflict inside javassist-maven-plugin -->
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>3.2.0</version>
      </dependency>

      <!-- Objenesis, used for creating injectable mocks for  final classes  -->
      <dependency>
        <groupId>org.objenesis</groupId>
        <artifactId>objenesis</artifactId>
        <version>${objenesis.version}</version>
      </dependency>

      <!-- Internal dependencies -->
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>remove-final-agent</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>remove-final-plugin</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>aspect-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>aspect-agent</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>constructor-mock-agent</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>sarek-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>sarek</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>sarek-agent</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>sarek-agent-common</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>agent-test-common</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>dev.sarek</groupId>
        <artifactId>agent-test-instrument-jre</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--
      Define globally here because otherwise Surefire/Failsafe groups/excludedGroups would not work.
      This will not be fixed, see https://issues.apache.org/jira/browse/SUREFIRE-1266.
    -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <pluginRepositories>
    <!-- TODO: As soon as the next Surefire milestone is available on Maven Central, get rid of this repository -->
    <pluginRepository>
      <id>maven-1575</id>
      <url>https://repository.apache.org/content/repositories/maven-1575/</url>
    </pluginRepository>
    <!--
    <pluginRepository>
      <id>apache-snapshots</id>
      <url>https://repository.apache.org/content/groups/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
    -->
  </pluginRepositories>

  <modules>
    <module>aspect-parent</module>
    <module>remove-final-parent</module>
    <module>constructor-mock-parent</module>
    <module>agent-test-parent</module>

    <module>sarek-constructor-mock-parent</module>
    <module>sarek-aspect-parent</module>
    <module>sarek-unfinal-parent</module>
    <module>sarek-mock-parent</module>
    <module>sarek-agent-common</module>
    <module>sarek</module>
    <module>sarek-agent</module>
  </modules>

</project>
