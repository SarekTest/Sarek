<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>dev.sarek</groupId>
    <artifactId>agent-test-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>agent-test-use-agent</artifactId>

  <!--
  Caveat: Automatic, JDK-based profile activation can *not* be inherited from a parent POM
  if we define the same profiles again. Thus, we have to repeat activation conditions there.
-->
  <profiles>

    <profile>
      <id>jdk-8</id>
      <activation>
        <jdk>[1.8,1.9)</jdk>
      </activation>

      <properties>
        <!--
          Use all the fancy features:
            a) some instrumented (definalised) JRE classes on the bootstrap class path
            b) aspect agent dynamically attached to bootstrap class path so we can advise JRE classes
            c) definaliser embedded in aspect agent for dynamically definalising non-instrumented JRE and application
               classes during class-loading
        -->
        <maven-failsafe.argLine>
          -Xbootclasspath/p:${instrumented-jre.jar}
          -javaagent:${aspect-agent.jar}=RemoveFinal{verbose};ConstructorMock{verXXXbose}
          <!-- -javaagent:${constructor-mock-agent.jar}-->
        </maven-failsafe.argLine>
      </properties>

    </profile>

    <profile>
      <id>jdk-9</id>
      <activation>
        <jdk>[1.9,)</jdk>
      </activation>

      <properties>
        <!--
          Use all the fancy features:
            a) some instrumented (definalised) JRE classes on the bootstrap class path
            b) aspect agent dynamically attached to bootstrap class path so we can advise JRE classes
            c) definaliser embedded in aspect agent for dynamically definalising non-instrumented JRE and application
               classes during class-loading
        -->
        <maven-failsafe.argLine>
          --patch-module java.base=${instrumented-jre.jar}
          -javaagent:${aspect-agent.jar}=RemoveFinal{verbose};ConstructorMock{verXXXbose}
          <!-- -javaagent:${constructor-mock-agent.jar}-->
          <!-- Needed for hot-attaching agents (e.g. PowerMock) on Java 9+ -->
          -Djdk.attach.allowAttachSelf=true
        </maven-failsafe.argLine>
      </properties>

    </profile>

  </profiles>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <argLine>${maven-failsafe.argLine}</argLine>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
    </dependency>

    <!-- Test dependencies -->

    <dependency>
      <groupId>dev.sarek</groupId>
      <artifactId>aspect-core</artifactId>
      <classifier>all</classifier>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>dev.sarek</groupId>
      <artifactId>agent-test-common</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Needed on the bootstrap class path in Maven Surefire/Failsafe -->
    <dependency>
      <groupId>dev.sarek</groupId>
      <artifactId>agent-test-instrument-jre</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Needed on the command line for '-javaagent:...' -->
    <dependency>
      <groupId>dev.sarek</groupId>
      <artifactId>aspect-agent</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${javassist.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>dev.sarek</groupId>
      <artifactId>constructor-mock-agent</artifactId>
      <version>${project.version}</version>
      <classifier>all</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
